---
name: CI

on:
  push:
    branches: [ "main", "feat/*", "release/*" ]
  pull_request:
    branches: [ "main", "feat/*", "release/*" ]
  schedule:
    - cron: '0 2 * * 1' # https://crontab.guru/#0_2_*_*_1

permissions:
  contents: read

jobs:
  angular-builds:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Angular CLI
        run: npm install --location=global @angular/cli@13.3.9
      - name: Install node modules
        run: cd components/webapp && npm install
      - name: Angular build
        run: cd components/webapp && ng build

  lint-yaml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore_paths: node_modules target

  lint-env-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run dotenvlinter in container
        run: docker run -i --rm --volume "$(pwd):/app" --workdir "/app" dotenvlinter/dotenv-linter:latest --exclude "*node_modules*" --recursive

  hadolint-angular-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: hadolint > Angular CLI helper
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: components/angular-cli/Dockerfile

  hadolint-api-adapter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: hadolint > Angular CLI helper
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: components/api-adapter/Dockerfile

  hadolint-webapp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: hadolint > Angular CLI helper
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: components/webapp/Dockerfile

  docker-builds:
    runs-on: ubuntu-latest
    needs: ['angular-builds', 'hadolint-angular-cli', 'hadolint-webapp', 'hadolint-api-adapter']
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set docker tag ('ci-build' for main or feature branch, 'release-candidate' for release branch)
        id: vars
        run: |
          echo ${{ github.ref }}
          TAG='ci-build'
          REF='refs/heads/release/'
          if [[ ${{ github.ref }} == *${REF}* ]]; then
            TAG='release-candidate'
          fi
          echo "tag = $TAG"
          echo "::set-output name=DOCKER_TAG::$TAG"

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker-compose build
        run: |
          (
            cd components || exit
            docker-compose build
          )

      - name: Re-tag images and deploy to DockerHub
        run: |
          docker tag local/api-adapter:dev sommerfeldio/gt7-dashboard-api-adapter:${{ steps.vars.outputs.DOCKER_TAG }}
          docker tag local/api-adapter:dev sommerfeldio/gt7-dashboard-webapp:${{ steps.vars.outputs.DOCKER_TAG }}
          docker push sommerfeldio/gt7-dashboard-api-adapter:${{ steps.vars.outputs.DOCKER_TAG }}
          docker push sommerfeldio/gt7-dashboard-webapp:${{ steps.vars.outputs.DOCKER_TAG }}

      - name: Run Snyk to check Docker image for vulnerabilities - webapp
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: sommerfeldio/gt7-dashboard-webapp:${{ steps.vars.outputs.DOCKER_TAG }}
          args: --file=components/webapp/Dockerfile

      - name: Run Snyk to check Docker image for vulnerabilities - api-adapter
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: sommerfeldio/gt7-dashboard-api-adapter:${{ steps.vars.outputs.DOCKER_TAG }}
          args: --file=components/api-adapter/Dockerfile

      - name: Upload snyk result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  on-failure:
    runs-on: ubuntu-latest
    needs: ['docker-builds', 'lint-yaml', 'shellcheck', 'hadolint-angular-cli', 'hadolint-webapp', 'hadolint-api-adapter', 'angular-builds', 'lint-env-files']
    if: failure()

    steps:
      - name: Send Pipeline Status to Google Chat
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: failure
