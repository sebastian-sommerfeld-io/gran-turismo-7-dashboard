---
name: CI

on:
  push:
    branches: [ "main", "feat/*", "release/*" ]
  pull_request:
    branches: [ "main", "feat/*", "release/*" ]
  schedule:
    - cron: '0 2 * * 1' # https://crontab.guru/#0_2_*_*_1

permissions:
  contents: read

jobs:
  update-linter-rules:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download latest linter rules
        uses: sebastian-sommerfeld-io/github-action-download-common-assets@main
      - name: Commit and push
        uses: EndBug/add-and-commit@v9
        with:
          author_name: sebastian
          author_email: sebastian@sommerfeld.io
          message: "[Actions Bot] refactor: auto-updated linter rules"

  angular-builds:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Angular CLI
        run: npm install --location=global @angular/cli@13.3.9
      - name: Angular build
        run: ng build

  lint-yaml:
    runs-on: ubuntu-latest
    needs: update-linter-rules
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3

  # lint-filenames:
  #   runs-on: ubuntu-latest
  #   needs: update-linter-rules
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Run ls-lint in container
  #       run: docker run -i --rm --volume "$(pwd):/data" --workdir "/data" lslintorg/ls-lint:1.11.0

  shellcheck:
    runs-on: ubuntu-latest
    needs: update-linter-rules
    steps:
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore_paths: node_modules target

  angular-cli-hadolint:
    runs-on: ubuntu-latest
    needs: update-linter-rules
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: hadolint > Angular CLI helper
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: components/angular-cli/Dockerfile

  webapp-hadolint:
    runs-on: ubuntu-latest
    needs: update-linter-rules
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: hadolint > Angular CLI helper
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: components/webapp/Dockerfile

  docker-builds:
    runs-on: ubuntu-latest
    needs: ['angular-builds', 'angular-cli-hadolint', 'webapp-hadolint']
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set docker tag ('docker-builds' for main or feature branch, 'release-candidate' for release branch)
        id: vars
        run: |
          echo ${{ github.ref }}
          TAG='docker-builds'
          REF='refs/heads/release/'
          if [[ ${{ github.ref }} == *${REF}* ]]; then
            TAG='release-candidate'
          fi
          echo "tag = $TAG"
          echo "::set-output name=DOCKER_TAG::$TAG"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker image build - angular-cli
        uses: docker/build-push-action@v3
        with:
          context: ./components/angular-cli
          platforms: linux/amd64
          push: false
          tags: local/angular-cli:dev

      - name: Docker image build - webapp
        uses: docker/build-push-action@v3
        with:
          context: ./components/angular-cli
          platforms: linux/amd64
          push: true
          tags: sommerfeldio/gt7-dashboard-webapp:${{ steps.vars.outputs.DOCKER_TAG }}

      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: sommerfeldio/gt7-dashboard-webapp:${{ steps.vars.outputs.DOCKER_TAG }}
          args: --file=components/webapp/Dockerfile

      - name: Upload snyk result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  on-failure:
    runs-on: ubuntu-latest
    needs: ['update-linter-rules', 'docker-builds', 'lint-yaml', 'shellcheck', 'angular-cli-hadolint', 'webapp-hadolint']
    if: failure()

    steps:
      - name: Send Pipeline Status to Google Chat
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: failure
